
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Transactions: Users can only read/write/delete their own transactions.
    match /transactions/{transactionId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // Goals: Users can only manage their own goals.
    match /goals/{goalId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Accounts: Users can only manage their own accounts.
    match /accounts/{accountId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // User Profiles:
    // Users can read their own profile.
    // Users can create their own profile.
    // Users can update their own profile, but cannot change their email, ID, or creation timestamp.
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
      // Allow update if the user is authenticated and owns the profile,
      // AND the update operation itself is not trying to change 'id', 'email', or 'createdAt'.
      // This implicitly allows changes to other fields like 'fullName', 'photoURL', 'notificationPreferences'.
      allow update: if request.auth != null &&
                       request.auth.uid == userId &&
                       // Check if 'id' is being changed (it shouldn't be in the update payload)
                       (request.resource.data.id == resource.data.id) &&
                       // Check if 'email' is being changed
                       (request.resource.data.email == resource.data.email) &&
                       // Check if 'createdAt' is being changed
                       (request.resource.data.createdAt == resource.data.createdAt);
    }
  }
}
