
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users:
    // - Anyone can create their own user profile document.
    // - Authenticated users can read, delete their own profile.
    // - Authenticated users can update their own profile, but cannot change 'id', 'email', or 'createdAt' fields.
    match /users/{userId} {
      allow read, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;

      allow update: if request.auth != null && request.auth.uid == userId &&
                    // Ensure the 'id' field in the document (which should match userId) is not changed.
                    request.resource.data.id == resource.data.id &&
                    // Ensure email is not changed.
                    request.resource.data.email == resource.data.email &&
                    // Ensure createdAt is not changed.
                    // This handles cases where createdAt might be null (e.g., for very old documents or before serverTimestamp resolves)
                    // or is a valid Timestamp.
                    (
                      (resource.data.createdAt == null && request.resource.data.createdAt == null) ||
                      (resource.data.createdAt != null && request.resource.data.createdAt != null &&
                       request.resource.data.createdAt.toMillis() == resource.data.createdAt.toMillis())
                    );
                    // Other fields like fullName, notificationPreferences, photoURL can be updated.
    }

    // Transactions:
    // - Users can only CRUD their own transactions.
    match /transactions/{transactionId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update: if request.auth != null && request.auth.uid == resource.data.userId &&
                       request.auth.uid == request.resource.data.userId; // Owns existing and new version
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Goals:
    // - Users can only CRUD their own goals.
    match /goals/{goalId} {
       allow read: if request.auth != null && request.auth.uid == resource.data.userId;
       allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
       allow update: if request.auth != null && request.auth.uid == resource.data.userId &&
                        request.auth.uid == request.resource.data.userId; // Owns existing and new version
       allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Accounts:
    // - Users can only CRUD their own accounts.
    match /accounts/{accountId} {
       allow read: if request.auth != null && request.auth.uid == resource.data.userId;
       allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
       allow update: if request.auth != null && request.auth.uid == resource.data.userId &&
                        request.auth.uid == request.resource.data.userId; // Owns existing and new version
       allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}
