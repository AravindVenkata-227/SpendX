
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection:
    // - Anyone can create their own user profile (e.g., on signup).
    // - Authenticated users can read, update, or delete their OWN profile.
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId 
                      && request.resource.data.id == userId; // Ensure ID field matches auth UID
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Transactions collection:
    // - Authenticated users can create transactions for themselves.
    // - Authenticated users can read, update, or delete ONLY their own transactions.
    match /transactions/{transactionId} {
      allow create: if request.auth != null 
                      && 'userId' in request.resource.data 
                      && request.resource.data.userId == request.auth.uid;
      allow read, update, delete: if request.auth != null 
                                  && 'userId' in resource.data
                                  && resource.data.userId != null 
                                  && resource.data.userId == request.auth.uid;
    }

    // Goals collection:
    // - Authenticated users can create goals for themselves.
    // - Authenticated users can read, update, or delete ONLY their own goals.
    match /goals/{goalId} {
      allow create: if request.auth != null 
                      && 'userId' in request.resource.data 
                      && request.resource.data.userId == request.auth.uid;
      allow read, update, delete: if request.auth != null 
                                  && 'userId' in resource.data
                                  && resource.data.userId != null 
                                  && resource.data.userId == request.auth.uid;
    }

    // Accounts collection:
    // - Authenticated users can create accounts for themselves.
    // - Authenticated users can read, update, or delete ONLY their own accounts.
     match /accounts/{accountId} {
      allow create: if request.auth != null 
                      && 'userId' in request.resource.data 
                      && request.resource.data.userId == request.auth.uid;
      allow read, update, delete: if request.auth != null 
                                  && 'userId' in resource.data
                                  && resource.data.userId != null
                                  && resource.data.userId == request.auth.uid;
    }
  }
}
