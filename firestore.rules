
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection
    // Users can read their own profile.
    // Users can create their own profile.
    // Users can update their own profile, but cannot change their email, id, or createdAt.
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
      // Allow update if the user is authenticated, owns the profile,
      // AND the update operation itself is not trying to change 'id', 'email', or 'createdAt'
      // to a *different* value than what's already there.
      // This implicitly allows changes to other fields like 'fullName', 'photoURL', 'notificationPreferences'.
      allow update: if request.auth != null &&
                       request.auth.uid == userId &&
                       (request.resource.data.id == resource.data.id) &&
                       (request.resource.data.email == resource.data.email) &&
                       (request.resource.data.createdAt == resource.data.createdAt);
      // No delete rule for users by default, manage through Firebase Console or Admin SDK if needed
    }

    // Transactions Collection
    // Users can only manage their own transactions.
    match /transactions/{transactionId} {
      allow read, write, update, delete: if request.auth != null &&
                                      'userId' in resource.data && // Check for existing doc on read/update/delete
                                      resource.data.userId == request.auth.uid;
      allow create: if request.auth != null &&
                       'userId'in request.resource.data && // Check for incoming doc on create
                       request.resource.data.userId == request.auth.uid;
    }

    // Goals Collection
    // Users can only manage their own goals.
    match /goals/{goalId} {
      allow read, write, update, delete: if request.auth != null &&
                                   'userId' in resource.data &&
                                   resource.data.userId == request.auth.uid;
      allow create: if request.auth != null &&
                     'userId'in request.resource.data &&
                     request.resource.data.userId == request.auth.uid;
    }

    // Accounts Collection
    // Users can only manage their own accounts.
    match /accounts/{accountId} {
       allow read, write, update, delete: if request.auth != null &&
                                   'userId' in resource.data &&
                                   resource.data.userId == request.auth.uid;
      allow create: if request.auth != null &&
                     'userId'in request.resource.data &&
                     request.resource.data.userId == request.auth.uid;
    }
  }
}
