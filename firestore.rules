
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection
    // Users can:
    // - Create their own user document (userId must match auth.uid).
    // - Read their own user document.
    // - Update their own user document (but not change id, email, createdAt).
    // - Cannot delete their own user document (for now).
    match /users/{userId} {
      allow create: if request.auth != null && 
                       request.auth.uid == userId;
      allow read: if request.auth != null && 
                     request.auth.uid == userId;
      allow update: if request.auth != null && 
                       request.auth.uid == userId &&
                       !(request.resource.data.keySet().hasAny(['id', 'email', 'createdAt'])); 
      allow delete: if false; // Or implement admin-only delete if needed
    }

    // Transactions Collection
    // Users can:
    // - Create transactions if they are authenticated and the userId in the new doc matches their auth.uid.
    // - Read, update, delete their own transactions (userId in the doc must match their auth.uid).
    match /transactions/{transactionId} {
      allow create: if request.auth != null && 
                       'userId' in request.resource.data && 
                       request.resource.data.userId == request.auth.uid;
      allow read, update, delete: if request.auth != null && 
                                     resource.data != null && // Ensure document exists for read/update/delete
                                     'userId' in resource.data && 
                                     resource.data.userId == request.auth.uid;
    }

    // Goals Collection
    // Users can:
    // - Create goals if they are authenticated and the userId in the new doc matches their auth.uid.
    // - Read, update, delete their own goals (userId in the doc must match their auth.uid).
    match /goals/{goalId} {
      allow create: if request.auth != null && 
                       'userId' in request.resource.data && 
                       request.resource.data.userId == request.auth.uid;
      allow read, update, delete: if request.auth != null && 
                                     resource.data != null && 
                                     'userId' in resource.data && 
                                     resource.data.userId == request.auth.uid;
    }
    
    // Accounts Collection
    // Users can:
    // - Create accounts if they are authenticated and the userId in the new doc matches their auth.uid.
    // - Read, update, delete their own accounts (userId in the doc must match their auth.uid).
    match /accounts/{accountId} {
      allow create: if request.auth != null && 
                       'userId' in request.resource.data && 
                       request.resource.data.userId == request.auth.uid;
      allow read, update, delete: if request.auth != null &&
                                     resource.data != null &&
                                     'userId' in resource.data && 
                                     resource.data.userId == request.auth.uid;
    }
  }
}
